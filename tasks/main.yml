---
- name: Set default go_url_base if not defined
  ansible.builtin.set_fact:
    go_url_base: >-
      {{ "https://go.dev/dl" if go_version == "latest" else "https://dl.google.com/go" }}

- name: Fetch latest Go version from website
  ansible.builtin.shell: |
    curl -s https://go.dev/dl/ | grep -oP 'go\K[0-9]+\.[0-9]+\.[0-9]+' | head -n 1
  register: go_version_output
  changed_when: false
  when: go_version == "latest"
  args:
    executable: /bin/bash

- name: Set the fetched Go version
  ansible.builtin.set_fact:
    go_version: "{{ go_version_output.stdout }}"
  when: go_version == "latest"

- name: Set Go tarball and download URL
  ansible.builtin.set_fact:
    go_tarball: "go{{ go_version }}.{{ go_platform }}-{{ go_arch }}.tar.gz"
    go_download_url: "{{ go_url_base }}/{{ go_tarball }}"

- name: Check if Go is already installed.
  ansible.builtin.command: /usr/local/go/bin/go version
  ignore_errors: true
  register: go_version_result
  changed_when: false

- name: Remove current installation.
  become: true
  ansible.builtin.file:
    state: absent
    path: /usr/local/go
  when:
    - go_version_result is succeeded
    - go_version not in go_version_result.stdout

- name: Download Go
  become: true
  ansible.builtin.get_url:
    url: "{{ go_download_url }}"
    dest: /usr/local/src/{{ go_tarball }}
    checksum: "{{ 'sha256:' + go_checksum if go_checksum | length > 0 else omit }}"
    mode: '0644'
  when:
    go_version_result is failed or
    go_version not in go_version_result.stdout

- name: Extract Go.
  become: true
  ansible.builtin.unarchive:
    src: /usr/local/src/{{ go_tarball }}
    dest: /usr/local
    copy: no
  when:
    go_version_result is failed or
    go_version not in go_version_result.stdout
  notify: Notify go installed

- name: Show Go version installed
  become: true
  ansible.builtin.command: /usr/local/go/bin/go version
  register: go_version_output
  changed_when: false

- name: Print Go version
  ansible.builtin.debug:
    msg: "âœ… Go installed version: {{ go_version_output.stdout }}"

- name: Ensure Go bin path is in /etc/profile.d/go-path.sh
  become: true
  ansible.builtin.lineinfile:
    path: /etc/profile.d/go-path.sh
    line: 'export PATH=$PATH:/usr/local/go/bin'
    create: yes
    state: present
    mode: '0644'
